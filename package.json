{
  "name": "html-jsx",
  "author": "stagas",
  "short": "stagas/html-jsx",
  "description": "Extensible jsx type definitions for standard html interfaces.",
  "version": "0.3.6",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://git@github.com:stagas/html-jsx.git"
  },
  "keywords": [
    "jsx",
    "html",
    "dom",
    "types",
    "typings"
  ],
  "module": "./dist/esm/index.js",
  "main": "./dist/cjs/index.js",
  "types": "./dist/types/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.js"
    },
    "./jsx-runtime": {
      "import": "./dist/esm/jsx-runtime.js",
      "require": "./dist/cjs/jsx-runtime.js"
    },
    "./tiny": {
      "import": "./dist/esm-tiny/index.js",
      "require": "./dist/cjs-tiny/index.js"
    },
    "./tiny/jsx-runtime": {
      "import": "./dist/esm-tiny/jsx-runtime.js",
      "require": "./dist/cjs-tiny/jsx-runtime.js"
    }
  },
  "typesVersions": {
    "*": {
      "jsx-runtime": [
        "./dist/cjs/jsx-runtime.d.ts"
      ],
      "tiny/jsx-runtime": [
        "./dist/cjs-tiny/jsx-runtime.d.ts"
      ]
    }
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "rollup-type-bundler --dist ./types --build-script build:all && echo done.",
    "gen": "node -r esbuild-register scripts/gen.ts",
    "docs": "echo no api docs",
    "test": "npm run test:node && npm run test:web",
    "test:node": "if find test -type f -iregex '.*\\.spec\\.\\(js\\|jsx\\|ts\\|tsx\\)$' | grep -q .; then utr 'test/*.spec.{js,jsx,ts,tsx}'; else echo no node tests; fi",
    "test:web": "if find test -type f -iregex '.*\\.spec\\.web\\.\\(js\\|jsx\\|ts\\|tsx\\)$' | grep -q .; then utr --browser 'test/*.spec.web.{js,jsx,ts,tsx}'; else echo no web tests; fi",
    "cov": "utr --coverage",
    "playground": "vite --force --cors --https --clearScreen=false --open /playground/",
    "build:watch": "onchange -i src --await-write-finish 400 -- npm run build",
    "docs:watch": "onchange -i src --await-write-finish 400 -- npm run docs",
    "cov:watch": "utr --coverage --watch",
    "build:all": "npm run gen && npm run build:types && npm run build:js && npm run build:js:tiny && npm run lint:fix",
    "build:types": "tsc -p tsconfig.types.json --outDir types && mkdir -p dist/types && cp types/* dist/types/ && echo 'module.exports = {}' >dist/types/index.js && echo 'export default {}' >dist/types/index.mjs",
    "build:js": "npm run build:cjs && npm run build:esm",
    "build:js:tiny": "npm run build:cjs:tiny && npm run build:esm:tiny",
    "build:cjs": "tsc -p jsx/tsconfig.json --outDir dist/cjs",
    "build:esm": "tsc -p jsx/tsconfig.json --outDir dist/esm --module esnext && echo '{\"type\":\"module\"}' >dist/esm/package.json",
    "build:cjs:tiny": "tsc -p tiny/tsconfig.json --outDir dist/cjs-tiny",
    "build:esm:tiny": "tsc -p tiny/tsconfig.json --outDir dist/esm-tiny --module esnext && echo '{\"type\":\"module\"}' >dist/esm-tiny/package.json",
    "build:min": "esbuild dist/esm/jsx-runtime.js --bundle --format=esm | terser --compress --module --mangle -o \"$(cat package.json | jq -r '.name').min.js\" && wc -c \"$(cat package.json | jq -r '.name').min.js\"",
    "build:bundle": "esbuild dist/esm/jsx-runtime.js --bundle --format=esm --outfile=\"$(cat package.json | jq -r '.name').js\" && wc -c \"$(cat package.json | jq -r '.name').js\"",
    "lint": "eslint src && dprint check",
    "lint:fix": "eslint --fix src && dprint fmt",
    "clean": "rimraf dist",
    "prepack": "npm run clean && npm run build",
    "prepack:dry": "npm pack --dry-run",
    "prepush": "npm run lint && npm run test",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@favware/rollup-type-bundler": "^1.0.7",
    "@markuplint/html-spec": "^1.8.2",
    "@n1kk/intspector": "1.0.2",
    "@swc/cli": "0.1.57",
    "@swc/core": "1.2.218",
    "@tsconfig/node16": "1.0.3",
    "@types/audioworklet": "0.0.29",
    "@types/jest": "27.5.2",
    "@types/node": "17.0.45",
    "@types/web": "^0.0.56",
    "@types/webmidi": "2.0.6",
    "@typescript-eslint/eslint-plugin": "5.30.7",
    "@typescript-eslint/parser": "5.30.7",
    "@typescript/lib-dom": "npm:@types/web@^0.0.56",
    "bunzee": "^1.0.0",
    "dokio": "^0.0.2",
    "dprint": "0.30.3",
    "eslint": "8.20.0",
    "eslint-config-html-jsx": "^1.0.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-react": "7.30.0",
    "husky": "7.0.4",
    "onchange": "7.1.0",
    "pull-configs": "^0.2.0",
    "rimraf": "3.0.2",
    "swcno": "0.1.1",
    "typescript": "4.7.3",
    "utr": "^0.2.0",
    "vite-open": "^2.4.0"
  },
  "dependencies": {
    "csstype": "^3.0.11"
  }
}
